@model UserRepos.Models.UserReposViewModel

@{
    ViewBag.Title = "Home Page";
    var repoData = (UserRepos.Models.UserReposViewModel)ViewData["RepoData"];
    var validationMessage = ViewData["ValidationMessage"].ToString();
    var errorMessage = ViewData["ErrorMessage"].ToString();
}

<div class="jumbotron">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary()
            <div class="form-group">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @if (!string.IsNullOrEmpty(validationMessage))
                    {
                        <div class="text-danger">@validationMessage</div>
                    }
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="text-danger">@errorMessage</div>
                    }
                </div>
            <div class="col-md-2">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
            </div>
        </div>

        <div class="form-group">
        </div>
    }
</div>

@if (!(repoData is null))
{
    <div class="container row">

        <div class="col-lg-4 user-info-box">
            <div class="user-info">
                <div>
                    <img class="avatar-image img-circle" src="@repoData.AvatarImage" alt="User GitHub Avatar Image">
                </div>

                <div class="text-center bold">
                    @repoData.Username
                </div>

                <div class="text-center bold">
                    @repoData.Location
                </div>
            </div>
        </div>

        <div class="userInfo col-lg-8 info-item">
            <table class="table">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(repo => repo.GitHubRepos.First().Name)</th>
                        <th>@Html.DisplayNameFor(repo => repo.GitHubRepos.First().Description)</th>
                        <th>@Html.DisplayNameFor(repo => repo.GitHubRepos.First().StarGazerCount)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var repo in repoData.GitHubRepos)
                    {
                        <tr>
                            <td><a href="@repo.RepoUrl">@repo.Name</a></td>
                            <td>@repo.Description</td>
                            <td>@repo.StarGazerCount</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
}
